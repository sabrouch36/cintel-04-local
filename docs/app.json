[{"name": "app.py", "content": "from shiny import App, ui, reactive, render\nfrom palmerpenguins import load_penguins\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the dataset\npenguins_df = load_penguins()\n\n# UI Layout\napp_ui = ui.page_fluid(\n    ui.h1(\"\ud83d\udc27 Palmer Penguins Dashboard\", class_=\"text-center text-primary\"),\n    ui.layout_sidebar(\n        ui.sidebar(\n            ui.h2(\"\ud83d\udd27 Filters\"),\n            ui.input_checkbox_group(\n                id=\"selected_species\",\n                label=\"Select species:\",\n                choices=[\"Adelie\", \"Chinstrap\", \"Gentoo\"],\n                selected=[\"Adelie\", \"Chinstrap\", \"Gentoo\"]\n            ),\n            ui.input_checkbox_group(\n                id=\"selected_island\",\n                label=\"Select island:\",\n                choices=penguins_df[\"island\"].dropna().unique().tolist(),\n                selected=penguins_df[\"island\"].dropna().unique().tolist()\n            ),\n            ui.input_slider(\n                id=\"min_flipper_length\",\n                label=\"Minimum Flipper Length (mm):\",\n                min=170,\n                max=235,\n                value=180\n            ),\n            ui.input_slider(\n                id=\"seaborn_bin_count\",\n                label=\"Seaborn Histogram Bins\",\n                min=5,\n                max=50,\n                value=20\n            ),\n            ui.a(\"\ud83d\udd17 GitHub Repo\", href=\"https://github.com/sabrouch36/cintel-03-reactive\", target=\"_blank\")\n        ),\n        # Body layout in two rows (3 + 2 charts)\n        ui.layout_columns(\n            # Row 1\n            ui.card(\n                ui.h2(\"\ud83d\udcca Filtered Data Summary\"),\n                ui.output_text_verbatim(\"filtered_count\"),\n                ui.output_data_frame(\"filtered_table\")\n            ),\n            ui.card(\n                ui.h2(\"\ud83d\udcc9 Body Mass Histogram\"),\n                ui.output_plot(\"mass_histogram\")\n            ),\n            ui.card(\n                ui.h2(\"\ud83e\udd67 Species Pie Chart\"),\n                ui.output_plot(\"pie_chart\")\n            ),\n\n            # Row 2\n            ui.card(\n                ui.h2(\"\ud83d\udccf Flipper Length Histogram\"),\n                ui.output_plot(\"seaborn_histogram\")\n            ),\n            ui.card(\n                ui.h2(\"\ud83d\udccc Scatter Plot\"),\n                ui.output_plot(\"scatterplot\")\n            )\n        )\n    )\n)\n\n# Server Logic\ndef server(input, output, session):\n\n    @reactive.calc\n    def filtered_data():\n        return penguins_df[\n            (penguins_df[\"species\"].isin(input.selected_species())) &\n            (penguins_df[\"island\"].isin(input.selected_island())) &\n            (penguins_df[\"flipper_length_mm\"] >= input.min_flipper_length())\n        ].dropna()\n\n    @output\n    @render.text\n    def filtered_count():\n        return f\"Filtered rows: {len(filtered_data())}\"\n\n    @output\n    @render.data_frame\n    def filtered_table():\n        return filtered_data()\n\n    @output\n    @render.plot\n    def mass_histogram():\n        df = filtered_data()\n        fig, ax = plt.subplots()\n        sns.histplot(data=df, x=\"body_mass_g\", hue=\"species\", multiple=\"stack\", palette=\"Set2\", ax=ax)\n        ax.set_title(\"Body Mass Distribution\")\n        fig.tight_layout()\n        return fig\n\n    @output\n    @render.plot\n    def pie_chart():\n        df = filtered_data()\n        fig, ax = plt.subplots()\n        df[\"species\"].value_counts().plot.pie(autopct='%1.1f%%', ax=ax, colors=[\"#66c2a5\", \"#fc8d62\", \"#8da0cb\"])\n        ax.set_title(\"Species Distribution\")\n        ax.set_ylabel(\"\")\n        fig.tight_layout()\n        return fig\n\n    @output\n    @render.plot\n    def seaborn_histogram():\n        df = filtered_data()\n        fig, ax = plt.subplots()\n        sns.histplot(data=df, x=\"flipper_length_mm\", bins=input.seaborn_bin_count(), kde=True, ax=ax)\n        ax.set_title(\"Seaborn Histogram: Flipper Length\")\n        fig.tight_layout()\n        return fig\n\n    @output\n    @render.plot\n    def scatterplot():\n        df = filtered_data()\n        fig, ax = plt.subplots()\n        sns.scatterplot(data=df, x=\"bill_length_mm\", y=\"flipper_length_mm\", hue=\"species\", style=\"island\", ax=ax)\n        ax.set_title(\"Bill Length vs Flipper Length\")\n        ax.set_xlabel(\"Bill Length (mm)\")\n        ax.set_ylabel(\"Flipper Length (mm)\")\n        fig.tight_layout()\n        return fig\n\n# Run the app\napp = App(app_ui, server)\n", "type": "text"}]